{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "premierleague-datafactory"
		},
		"AzureSqlDatabase1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase1'"
		},
		"AzureSqlDatabase2_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase2'"
		},
		"Batch_storage_linked_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Batch_storage_linked'"
		},
		"Final_CSV_Output_linkedservice_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'Final_CSV_Output_linkedservice'"
		},
		"Premierleagecsvfilea_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'Premierleagecsvfilea'"
		},
		"newcsvfiles_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'newcsvfiles'"
		},
		"output_data_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'output_data'"
		},
		"outputcsv_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'outputcsv'"
		},
		"AzureSqlDatabase1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sshresthapremierleague.database.windows.net"
		},
		"AzureSqlDatabase1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sqldb"
		},
		"AzureSqlDatabase1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sshrestha"
		},
		"AzureSqlDatabase2_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sshresthapremierleague.database.windows.net"
		},
		"AzureSqlDatabase2_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sqldb"
		},
		"AzureSqlDatabase2_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sshrestha"
		},
		"Final_CSV_Output_linkedservice_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sshrestha.dfs.core.windows.net/"
		},
		"Premierleagecsvfilea_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sshrestha.dfs.core.windows.net/"
		},
		"newcsvfiles_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://shrestha.dfs.core.windows.net/"
		},
		"output_data_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sshrestha.dfs.core.windows.net/"
		},
		"outputcsv_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sshrestha.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/batch_script_activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load_into_PLResults_Activity",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "append_dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"appendablefile": {},
									"premierleagueresults": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Transform_and_load_PLPoints",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Load_into_PLResults_Activity",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Transformation",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "CalculatePoints_and_OutputFile_Activity",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Transform_and_load_PLPoints",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CalculatePoints",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/append_dataflow')]",
				"[concat(variables('factoryId'), '/dataflows/Transformation')]",
				"[concat(variables('factoryId'), '/dataflows/CalculatePoints')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/plresults')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Sourcedata",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Season_End_Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Season_End_Year",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Wk",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Wk",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Home",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Home",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomeGoals",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HomeGoals",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AwayGoals",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AwayGoals",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Away",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Away",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FTR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FTR",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PremierLeague",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-04T02:28:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PremierLeague')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/storefinalpointstable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "OutputPointsTableCSV",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT season_end_year, team, gamesplayed, win, loss, draw, points, goalscored, goalagainst, goaldifference \nFROM [dbo].[finalplpoints] ;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Season_End_Year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Wk",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Date",
						"type": "date"
					},
					{
						"name": "Home",
						"type": "varchar"
					},
					{
						"name": "HomeGoals",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AwayGoals",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Away",
						"type": "varchar"
					},
					{
						"name": "FTR",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "plresults"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Season_End_Year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "team",
						"type": "varchar"
					},
					{
						"name": "win",
						"type": "int",
						"precision": 10
					},
					{
						"name": "loss",
						"type": "int",
						"precision": 10
					},
					{
						"name": "draw",
						"type": "int",
						"precision": 10
					},
					{
						"name": "points",
						"type": "int",
						"precision": 10
					},
					{
						"name": "goalscored",
						"type": "int",
						"precision": 10
					},
					{
						"name": "goalagainst",
						"type": "int",
						"precision": 10
					},
					{
						"name": "goaldifference",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "plpoints"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "output_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "finalfile.csv",
						"folderPath": "output",
						"fileSystem": "preamier-league-matches"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/output_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Final_CSV_Output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Final_CSV_Output_linkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Final_CSV_Output_linkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PremierLeague')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Premierleagecsvfilea",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "premier_league_results_append.csv",
						"fileSystem": "append"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Season_End_Year",
						"type": "String"
					},
					{
						"name": "Wk",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Home",
						"type": "String"
					},
					{
						"name": "HomeGoals",
						"type": "String"
					},
					{
						"name": "AwayGoals",
						"type": "String"
					},
					{
						"name": "Away",
						"type": "String"
					},
					{
						"name": "FTR",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Premierleagecsvfilea')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase2_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase2_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase2_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase2_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Batch_storage_linked')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Batch_storage_linked_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Final_CSV_Output_linkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Final_CSV_Output_linkedservice_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('Final_CSV_Output_linkedservice_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Premierleagecsvfilea')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Premierleagecsvfilea_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('Premierleagecsvfilea_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/newcsvfiles')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('newcsvfiles_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('newcsvfiles_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/output_data')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('output_data_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('output_data_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/outputcsv')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('outputcsv_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('outputcsv_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CalculatePoints')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Final_CSV_Output",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "Final_CSV_Output_linkedservice",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "aggregate1",
							"description": "select season_end_year, team, count(*) as gamesplayed,sum(win) as Wins, sum(loss) Losses, sum(draw) Draws, sum(points) Pts, sum(goalscored) GS, sum(goalagainst) GA, sum(goaldifference) GD \nfrom plpoints\ngroup by season_end_year, team order by 1 desc,2"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Season_End_Year as integer,",
						"          team as string,",
						"          win as integer,",
						"          loss as integer,",
						"          draw as integer,",
						"          points as integer,",
						"          goalscored as integer,",
						"          goalagainst as integer,",
						"          goaldifference as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 aggregate(groupBy(Season_End_Year,",
						"          team),",
						"     gamesplayed = count(1),",
						"          wins = sum(win),",
						"          loss = sum(loss),",
						"          draw = sum(draw),",
						"          pts = sum(points),",
						"          gs = sum(goalscored),",
						"          ga = sum(goalagainst),",
						"          gd = sum(goaldifference)) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]",
				"[concat(variables('factoryId'), '/datasets/Final_CSV_Output')]",
				"[concat(variables('factoryId'), '/linkedServices/Final_CSV_Output_linkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Transformation')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "derivedColumnHome",
							"description": "select a.season_end_year, a.Home, \ncase when a.HomeGoals>a.AwayGoals then 1 end win,\ncase when a.AwayGoals>a.HomeGoals then 1 end lose,\ncase when a.HomeGoals=a.AwayGoals then 1 end draw,\ncase when a.HomeGoals>a.AwayGoals then 3\n\twhen a.HomeGoals=a.AwayGoals then 1\n\telse 0\nend points,\na.homegoals goalscored,\na.AwayGoals goalagainst,\na.homegoals-a.AwayGoals goaldifference\n from plresults a\n"
						},
						{
							"name": "select1",
							"description": "\n\nRenaming derivedColumnAway to select2 with columns 'Season_End_Year, Team, win, lose, draw, points, goalscored, goalagainst, goaldifference'"
						},
						{
							"name": "derivedColumnAway",
							"description": "select \na.season_end_year, a.Away, \ncase when a.AwayGoals>a.HomeGoals then 1 end win,\ncase when a.HomeGoals>a.AwayGoals then 1 end lose,\ncase when a.HomeGoals=a.AwayGoals then 1 end draw,\ncase when a.AwayGoals>a.HomeGoals then 3\n\twhen a.HomeGoals=a.AwayGoals then 1\n\telse 0\nend points,\na.AwayGoals goalscored,\na.homegoals goalagainst,\na.AwayGoals-a.homegoals goaldifference\n from plresults a;"
						},
						{
							"name": "select2"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Season_End_Year as integer,",
						"          Wk as integer,",
						"          Date as date,",
						"          Home as string,",
						"          HomeGoals as integer,",
						"          AwayGoals as integer,",
						"          Away as string,",
						"          FTR as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 derive(Season_End_Year = Season_End_Year,",
						"          Team = Home,",
						"          win = iif(HomeGoals>AwayGoals,1,0),",
						"          lose = iif(AwayGoals>HomeGoals,1,0),",
						"          draw = iif(AwayGoals==HomeGoals,1,0),",
						"          points = iif(HomeGoals > AwayGoals, 3, iif(AwayGoals > HomeGoals, 0, 1)),",
						"          goalscored = HomeGoals,",
						"          goalagainst = AwayGoals,",
						"          goaldifference = HomeGoals-AwayGoals) ~> derivedColumnHome",
						"derivedColumnHome select(mapColumn(",
						"          Season_End_Year,",
						"          Team,",
						"          win,",
						"          lose,",
						"          draw,",
						"          points,",
						"          goalscored,",
						"          goalagainst,",
						"          goaldifference",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"source1 derive(Season_End_Year = Season_End_Year,",
						"          Team = Away,",
						"          win = iif(AwayGoals>HomeGoals,1,0),",
						"          lose = iif(HomeGoals>AwayGoals,1,0),",
						"          draw = iif(AwayGoals==HomeGoals,1,0),",
						"          points = iif(AwayGoals > HomeGoals, 3, iif(HomeGoals > AwayGoals, 0, 1)),",
						"          goalscored = AwayGoals,",
						"          goalagainst = HomeGoals,",
						"          goaldifference = AwayGoals-HomeGoals) ~> derivedColumnAway",
						"derivedColumnAway select(mapColumn(",
						"          Season_End_Year,",
						"          Team,",
						"          win,",
						"          lose,",
						"          draw,",
						"          points,",
						"          goalscored,",
						"          goalagainst,",
						"          goaldifference",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Season_End_Year as integer,",
						"          team as string,",
						"          win as integer,",
						"          loss as integer,",
						"          draw as integer,",
						"          points as integer,",
						"          goalscored as integer,",
						"          goalagainst as integer,",
						"          goaldifference as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
						"select2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Season_End_Year as integer,",
						"          team as string,",
						"          win as integer,",
						"          loss as integer,",
						"          draw as integer,",
						"          points as integer,",
						"          goalscored as integer,",
						"          goalagainst as integer,",
						"          goaldifference as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/append_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "PremierLeague",
								"type": "DatasetReference"
							},
							"name": "appendablefile"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "premierleagueresults"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Season_End_Year as string,",
						"          Wk as string,",
						"          Date as string,",
						"          Home as string,",
						"          HomeGoals as string,",
						"          AwayGoals as string,",
						"          Away as string,",
						"          FTR as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> appendablefile",
						"appendablefile sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Season_End_Year as integer,",
						"          Wk as integer,",
						"          Date as date,",
						"          Home as string,",
						"          HomeGoals as integer,",
						"          AwayGoals as integer,",
						"          Away as string,",
						"          FTR as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> premierleagueresults"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PremierLeague')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		}
	]
}